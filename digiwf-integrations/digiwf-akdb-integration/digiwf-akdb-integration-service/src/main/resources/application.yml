spring:
  cloud:
    stream:
      function:
        routing:
          enabled: 'true'
      bindings:
        functionRouter-in-0:
          group: "dwf-akdb-integration-local-01"
          destination: "digiwf-akdb-integration-local-01"
        sendMessage-out-0:
          destination: "dwf-connector-local-01"
      kafka:
        binder:
          brokers: "${KAFKA_BOOTSTRAP_SERVER:localhost}:${KAFKA_BOOTSTRAP_SERVER_PORT:29092}"
          producerProperties:
            value:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
            key:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
          consumerProperties:
            auto:
              offset:
                reset: latest
            value:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            key:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          configuration:
            security:
              protocol: "${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}"
    function:
      definition: functionRouter;sendMessage;
      routing-expression: "headers['type']"
  kafka:
    consumer:
      properties:
        spring:
          json:
            trusted:
              packages: "*"
io:
  muenchendigital:
    digiwf:
      message:
        incidentDestination: "dwf-connector-incident-local-01"
        bpmnErrorDestination: "dwf-connector-bpmnerror-local-01"
        correlateMessageDestination: "dwf-connector-local-01"

server:
  port: 8088
